name: Continuous Integration workflow

on:
  pull_request:
    branches: [main]
    paths:
      - starter/frontend/**
      - .github/workflows/frontend-ci.yaml
  push:
    branches:
      - fe-ci-2
    paths:
      - starter/frontend/**
      - .github/workflows/frontend-ci.yaml
env:
  NODE_VERSION: 20

jobs:
  lint_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{nodeVersion}}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint
  test_job:
    name: Test Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  # build_job:
  #   name: Build Job
  #   runs-on: ubuntu-latest
  #   needs: [lint_job, test_job]

  #   steps:
  #     # Step 1: Checkout the code
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Step 2: Setup Node.js
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{nodeVersion}}

  #     # Step 3: Restore cache for dependencies
  #     - name: Cache Node.js modules
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     # Step 4: Install dependencies
  #     - name: Install dependencies
  #       run: npm ci

  #     # Step 5: Build application using Docker
  #     - name: Build Docker image
  #       run: docker build -t my-app:latest .